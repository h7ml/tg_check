name: check

on:
  workflow_dispatch:
    inputs:
      python-version:
        type: string
        default: '3.10'
        description: 'Python version to use'
  schedule:
    - cron: '0 6 * * *' # 每天 6 点执行
  push:
    branches:
      - main
    paths:
      - .signer/**/*.json

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["${{ github.event.inputs.python-version || '3.10' }}"]

    env:
      TZ: Asia/Shanghai # 设置为东八区时间

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Cache Python dependencies
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip-deps-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-pip-deps-

      # 3. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

  install:
    runs-on: ubuntu-latest
    needs: setup # 确保先运行 setup

    steps:
      # 4. Upgrade pip
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      # 5. Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --no-cache-dir -U tg-signer TgCrypto
        env:
          PIP_CACHE_DIR: ~/.cache/pip

      # 6. Cache node modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # 7. Install Node.js dependencies
      - name: Install ai-markdown-translator globally
        run: npm install -g ai-markdown-translator@1.0.15

  check-tg-signer:
    runs-on: ubuntu-latest
    needs: install # 确保先运行 install

    steps:
      # 8. Print environment details for debugging
      - name: Print environment details
        run: |
          echo "Python path: $(which python)"
          echo "Pip path: $(which pip)"
          echo "TG-Signer path: $(python -m site --user-base)/bin/tg-signer"
          echo "PATH: $PATH"
          python -m pip freeze

      # 9. Validate tg-signer commands
      - name: Validate tg-signer commands
        run: |
          $(python -m site --user-base)/bin/tg-signer --help

      # 10. Run tg-signer
      - name: Run tg-signer
        run: |
          rm -rf ./tg-signer.log
          set -e
          $(python -m site --user-base)/bin/tg-signer run-once

  process-logs:
    runs-on: ubuntu-latest
    needs: check-tg-signer # 确保先运行 check-tg-signer

    steps:
      # 11. Rename log to md and copy
      - name: Rename log to md
        run: |
          log_path="./$(date +%Y/%m/%d).md"
          mkdir -p $(dirname "$log_path")
          mv ./tg-signer.log "$log_path"
          cp "$log_path" ./log.md

  setup-node:
    runs-on: ubuntu-latest
    needs: process-logs # 确保先运行 process-logs

    steps:
      # 12. Set up Node.js for translation
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

  translate-log:
    runs-on: ubuntu-latest
    needs: setup-node # 确保先运行 setup-node

    steps:
      # 13. Translate log to Chinese markdown
      - name: Translate log to Chinese
        run: ai-markdown-translator -i log.md -l "中文，并重新整理为markdown格式（要求整理标题和内容，要很好的区分每个对应的任务和内容）"

  commit-and-push:
    runs-on: ubuntu-latest
    needs: translate-log # 确保先运行 translate-log

    steps:
      # 14. Commit and push changes
      - name: Commit and push changes
        run: |
          git config --local user.email "action@h7ml.cn"
          git config --local user.name "GitHub Action"
          git config advice.ignoredHook false
          git add ./$(date +%Y/%m/%d).md ./log.md
          git add .signer
          git commit -m "check $(date +%Y/%m/%d)" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
